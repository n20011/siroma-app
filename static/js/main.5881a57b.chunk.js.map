{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Exchange","props","state","isLoaded","items","fetch","then","res","json","console","log","rates","setState","answer","images","image","this","class","Style","color","src","Button","size","variant","onClick","window","location","reload","Component","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"mQAKMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,UAAU,EACVC,MAAO,IAJS,E,qDAOpB,WAAsB,IAAD,OACnBC,MAAM,yBACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,EAAKG,OACjB,EAAKC,SAAS,CACZT,UAAU,EACVC,MAAOI,EAAKK,OACZC,OAAQN,EAAKO,a,oBAKrB,WAAW,IAAD,EAC4BC,KAAKd,MAAjCE,EADA,EACAA,MAAOD,EADP,EACOA,SAAUW,EADjB,EACiBA,OAEzB,OADJL,QAAQC,IAAIM,KAAKd,OACRC,EAID,sBAAKc,MAAM,YAAX,UACE,oBAAIC,MAAM,oBAAV,SAA8B,uBAAMC,MAAM,UAAZ,UAAuBf,EAAvB,SAC9B,qBAAKa,MAAM,SAASG,IAAKN,IACzB,qBAAKG,MAAM,SAAX,SACE,cAACI,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,YAAYJ,MAAM,UAAUK,QAAS,kBAAMC,OAAOC,SAASC,UAAxF,mCAPC,oBAAIT,MAAM,oBAAV,gC,GAzBUU,aAwCR5B,IAEf6B,iBAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,SC/C7C,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFX,SAASC,eAAe,SAM1BC,M","file":"static/js/main.5881a57b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './App.css'\nimport Button from '@material-ui/core/Button'\n\nclass Exchange extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      items: []\n    }\n  }\n  componentDidMount () {\n    fetch('https://yesno.wtf/api')\n      .then(res => res.json())\n      .then(json => {\n        console.log(json.rates)\n        this.setState({\n          isLoaded: true,\n          items: json.answer,\n          images: json.image\n        })\n      })\n  }\n\n  render () {\n    const { items, isLoaded, images } = this.state\nconsole.log(this.state)\n    if (!isLoaded) {\n      return <h1 Style='text-align:center'>Now Loading...</h1>\n    } else {\n      return (\n        <div class='backcolor'>\n          <h1 Style='text-align:center'><font color='#3d5afe'>{items}!</font></h1>\n          <img class='images' src={images} />\n          <div class='button'>\n            <Button size='large' variant='contained' color='primary' onClick={() => window.location.reload()}>Next Yes or No ?</Button>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Exchange\n\nrender(<Exchange />, document.getElementById('root'))\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}